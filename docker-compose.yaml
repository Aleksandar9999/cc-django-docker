version: '2.2'
services:
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
  
  ftndb: &pgdb
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: ssluzba
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  ftnssluzba: &ssluzba
    image: aco99/ssluzba
    environment: &ssluzbaenv
      DB_HOST: ftndb
      DB_PASSWORD: admin
      FACULTY_NAME: FTN
      UNS_API: http://unssluzba:3000/users/
    ports:
      - "8081:8081"
    depends_on:
      ftndb:
          condition: service_healthy
  
  pmfdb:
    <<: *pgdb
  pmfssluzba:
    <<: *ssluzba
    environment:
      <<: *ssluzbaenv
      DB_HOST: pmfdb
      FACULTY_NAME: 'PMF'
    volumes:
      - ./django_project/:/app
    ports:
      - "8082:8081"
    depends_on:
      pmfdb:
          condition: service_healthy

  pravnidb:
    <<: *pgdb
  pravnissluzba:
    <<: *ssluzba
    environment:
      <<: *ssluzbaenv
      DB_HOST: pravnidb
      FACULTY_NAME: 'PRAVNI'
    ports:
      - "8083:8081"
    depends_on:
      pravnidb:
          condition: service_healthy
  
  unsdb:
    <<: *pgdb
    volumes:
      - D:\Fakultet\MASTER\CC\cc-django-docker\init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_DB: ssluzba
      POSTGRES_HOST_AUTH_METHOD: trust
  unssluzba:
    image: aco99/nodejs_uns
    restart: always
    environment:
      DB_HOST: unsdb
      DB_PASSWORD: admin
    ports:
      - "3000:3000"
    depends_on:
      unsdb:
          condition: service_healthy

